/* SillyTavern预设转换工具特定样式 */

/* 工具内容区域 */
.converter-container {
    display: flex;
    flex-direction: column;
    gap: 20px;
    margin-top: 20px;
}

/* 扩展说明区域样式 */
.extended-description {
    background-color: var(--card-bg);
    border-radius: var(--border-radius);
    border: 1px solid var(--border-color);
    margin: 20px 0;
    overflow: hidden;
}

.description-toggle {
    display: flex;
    align-items: center;
    padding: 15px;
    cursor: pointer;
    background-color: var(--card-bg);
    transition: background-color 0.3s;
    font-weight: 500;
}

.description-toggle:hover {
    background-color: var(--hover-color);
}

.description-toggle i {
    transition: transform 0.3s;
    margin-right: 10px;
}

.description-toggle.active i {
    transform: rotate(180deg);
}

.extended-description-content {
    display: none;
    padding: 0 20px 20px;
    animation: slideDown 0.3s ease-out;
}

.extended-description-content.active {
    display: block;
}

/* 默认状态下，预设指南显示，LOG指南隐藏 */
.description-toggle.preset-guide {
    display: flex;
}

.description-toggle.log-guide {
    display: none;
}

@keyframes slideDown {
    from { 
        opacity: 0;
        transform: translateY(-10px);
    }
    to { 
        opacity: 1;
        transform: translateY(0);
    }
}

.guide-section {
    margin-bottom: 15px;
}

.guide-step {
    margin: 15px 0;
    padding-left: 15px;
    border-left: 3px solid var(--primary-color);
}

.guide-step h4 {
    margin-top: 0;
    margin-bottom: 10px;
    color: var(--primary-color);
}

.guide-step ul, .guide-step ol {
    padding-left: 1.5rem;
    margin: 10px 0;
}

.guide-step li {
    margin-bottom: 8px;
    padding-left: 0.5rem;
}

.code-block {
    background-color: var(--bg-color);
    padding: 15px;
    border-radius: 8px;
    overflow-x: auto;
    font-family: 'Consolas', monospace;
    font-size: 0.9em;
    line-height: 1.5;
    margin: 15px 0;
    white-space: pre-wrap;
    max-height: 300px;
    overflow-y: auto;
}

/* 标签页样式 */
.tabs {
    display: flex;
    margin-bottom: 25px;
    border-bottom: 2px solid var(--border-color);
}

.tab {
    padding: 12px 24px;
    cursor: pointer;
    border: 1px solid transparent;
    border-bottom: none;
    margin-right: 5px;
    border-radius: 8px 8px 0 0;
    font-weight: 500;
    transition: all 0.3s;
}

.tab:hover {
    background: var(--hover-color);
}

.tab.active {
    background: var(--bg-color);
    border-color: var(--border-color);
    border-bottom: 3px solid var(--primary-color);
}

.tab-content {
    display: none;
    animation: fadeIn 0.5s;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

.tab-content.active {
    display: block;
}

/* 区域通用样式 */
.section {
    margin-bottom: 30px;
    background-color: var(--card-bg);
    border-radius: var(--border-radius);
    padding: 20px;
    border: 1px solid var(--border-color);
}

.section h3 {
    margin-top: 0;
    margin-bottom: 15px;
    font-weight: 600;
    color: var(--text-color);
    font-size: 1.2rem;
}

/* 示例格式区域 */
.sample {
    background-color: var(--bg-color);
    padding: 15px;
    border-left: 4px solid var(--primary-color);
    margin: 15px 0;
    overflow: auto;
    border-radius: 0 8px 8px 0;
    font-size: 0.9em;
    font-family: 'Consolas', monospace;
    max-height: 200px;
}

/* 文本域样式 */
.converter-textarea {
    width: 100%;
    height: 300px;
    font-family: 'Consolas', monospace;
    padding: 15px;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    resize: vertical;
    transition: border 0.3s;
    box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);
    background-color: var(--input-bg);
    color: var(--text-color);
}

.converter-textarea:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(var(--primary-color-rgb), 0.2);
}

/* 操作按钮区域 */
.actions {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 10px;
    margin: 20px 0;
    justify-content: flex-start;
}

/* 文件输入包装 */
.file-input-wrapper {
    position: relative;
    overflow: hidden;
    display: inline-block;
}

.file-input-wrapper input[type="file"] {
    position: absolute;
    left: 0;
    top: 0;
    opacity: 0;
    width: 100%;
    height: 100%;
    cursor: pointer;
}

.file-input-label {
    display: inline-block;
    padding: 8px 20px;
    background: var(--primary-color);
    color: white;
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.3s;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    font-weight: 500;
    margin: 5px;
    border: none;
}

.file-input-label:hover {
    background: var(--primary-hover);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.15);
}

.filename {
    margin-left: 10px;
    font-size: 0.9em;
    color: var(--text-secondary);
}

/* 按钮样式 */
.converter-btn, .file-input-label {
    padding: 10px 15px;
    background: var(--primary-color);
    color: white;
    border: none;
    cursor: pointer;
    margin: 5px;
    border-radius: 6px;
    transition: all 0.3s;
    font-weight: 500;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    font-size: 14px;
    width: 150px;
    height: 40px;
    text-align: center;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    line-height: 1.2;
}

.converter-btn:hover, .file-input-label:hover {
    background: var(--primary-hover);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.15);
}

.converter-btn-secondary, 
.file-input-label.secondary {
    background: var(--secondary-color);
}

.converter-btn-secondary:hover,
.file-input-label.secondary:hover {
    background: var(--secondary-hover);
}

/* 复选框容器 */
.checkbox-container,
.prefix-mode-container {
    margin-left: 10px;
    display: flex;
    align-items: center;
}

.checkbox-container input[type="checkbox"] {
    margin-right: 5px;
}

/* 前缀模式样式 */
.prefix-mode-label {
    margin-right: 10px;
    font-weight: 500;
}

.prefix-mode-select {
    padding: 8px 12px;
    border-radius: 6px;
    border: 1px solid var(--border-color);
    background-color: var(--input-bg);
    color: var(--text-color);
    min-width: 170px;
    cursor: pointer;
    font-size: 14px;
    height: 40px;
    appearance: auto;
}

.prefix-mode-select:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb), 0.2);
}

.prefix-mode-select option {
    background-color: var(--bg-color);
    color: var(--text-color);
    padding: 8px;
}

/* 响应式调整 */
@media (max-width: 768px) {
    .tabs {
        flex-direction: column;
    }
    
    .tab {
        border-radius: 4px;
        margin-bottom: 5px;
    }
    
    .actions {
        flex-direction: column;
        align-items: stretch;
    }
    
    .file-input-wrapper {
        width: 100%;
    }
    
    .converter-btn {
        width: 100%;
    }
    
    .checkbox-container,
    .prefix-mode-container {
        margin-left: 0;
        margin-top: 10px;
        width: 100%;
    }
    
    .prefix-mode-select {
        flex-grow: 1;
    }
}

/* 正则表达式处理样式 */
.regex-container {
    margin-bottom: 20px;
}

.regex-list {
    margin-bottom: 10px;
    max-height: 300px;
    overflow-y: auto;
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 10px;
    background-color: var(--background-secondary);
}

.regex-item {
    margin-bottom: 10px;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
    background-color: var(--background-primary);
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.regex-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.regex-name {
    font-weight: bold;
    flex-grow: 1;
}

.regex-fields {
    display: flex;
    flex-direction: column;
    gap: 5px;
}

.regex-field {
    display: flex;
    align-items: center;
    gap: 10px;
}

.regex-field label {
    min-width: 80px;
    font-weight: bold;
}

.regex-field input[type="text"] {
    flex-grow: 1;
    padding: 8px;
    border: 1px solid var(--border-color);
    border-radius: 4px;
    background-color: var(--input-bg);
    color: var(--text-color);
    font-family: inherit;
    font-size: 0.9em;
    width: 100%;
}

.regex-field input[type="text"]:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb), 0.2);
}

.regex-actions {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    gap: 10px;
    margin-top: 10px;
}

.regex-target {
    display: flex;
    gap: 10px;
    align-items: center;
}

.checkbox-wrapper {
    display: flex;
    align-items: center;
    gap: 5px;
}

.remove-regex-btn {
    background-color: #e74c3c;
    color: white;
    border: none;
    border-radius: 3px;
    padding: 3px 8px;
    cursor: pointer;
}

.remove-regex-btn:hover {
    background-color: #c0392b;
}

@media (max-width: 768px) {
    .regex-field {
        flex-direction: column;
        align-items: flex-start;
    }
    
    .regex-field input[type="text"] {
        width: 100%;
    }
    
    .regex-actions {
        flex-direction: column;
        align-items: flex-start;
    }
}

.regex-display {
    flex-grow: 1;
    padding: 6px 8px;
    border: 1px solid #ccc;
    border-radius: 3px;
    background-color: var(--background-secondary);
    font-family: monospace;
    white-space: pre-wrap;
    word-break: break-all;
    min-height: 1.5em;
    max-height: 100px;
    overflow-y: auto;
    font-size: 0.9em;
}

/* 正则表达式文本域样式 */
.regex-input {
    flex-grow: 1;
    min-height: 60px;
    max-height: 150px;
    width: 100%;
    padding: 8px;
    border: 1px solid var(--border-color);
    border-radius: 4px;
    background-color: var(--input-bg);
    color: var(--text-color);
    font-family: monospace;
    font-size: 0.9em;
    resize: vertical;
    white-space: pre-wrap;
    word-break: break-all;
}

.regex-input:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb), 0.2);
}

/* 正则表达式帮助信息样式 */
.regex-help {
    margin: 4px 0 8px 80px;
    font-size: 0.85em;
    color: var(--text-secondary);
}

.regex-help-text {
    font-style: italic;
}

@media (max-width: 768px) {
    .regex-field {
        flex-direction: column;
        align-items: flex-start;
    }
    
    .regex-field input[type="text"] {
        width: 100%;
    }
    
    .regex-help {
        margin-left: 0;
    }
    
    .regex-actions {
        flex-direction: column;
        align-items: flex-start;
    }
} 